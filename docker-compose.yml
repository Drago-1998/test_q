version: "3.9"


services:
  django:
    image: test_q
    container_name: django
    env_file:
      - .env.dev
    command: bash -c "rm -rf celerybeat.pid && python3 manage.py migrate --run-syncdb && python manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/test_q/
    ports:
      - "8000:8000"
    depends_on:
      - pg_db
      - redis
  flower:
    image: test_q
    command: celery -A test_q flower  --address=0.0.0.0 --port=3000
    env_file:
      - .env.dev
    volumes:
      - .:/usr/src/test_q/
    ports:
      - "3000:3000"
    depends_on:
      - celery_worker
      - django
  celery_worker:
    image: test_q
    command: celery -A test_q worker -l INFO
    env_file:
      - .env.dev
    volumes:
      - .:/usr/src/test_q/
    depends_on:
      - django
      - redis
  celery_beat:
    image: test_q
    command: celery -A test_q beat -l INFO
    env_file:
      - .env.dev
    volumes:
      - .:/usr/src/test_q/
    depends_on:
      - django
      - redis
      - celery_worker
  pg_db:
    image: postgres:10.1-alpine
    container_name: pg_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
  redis:
    image: redis:alpine
volumes:
  pgdata:
